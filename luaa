-- THIS ONLY CLINET SCRIPT!!!!!!!!!!!!!

local tool = script.Parent
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local uis = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local shootRemote = ReplicatedStorage.Events:WaitForChild("ShootRemote")
local reloadRemote = ReplicatedStorage.Events:WaitForChild("ReloadRemote")

local equipped = false
local ViewModel
local animator
local equipAnim
local idleAnim
local shootAnim
local reloadAnim
local charShootAnim
local charIdleAnim
local charReloadAnim

local equipAnimationId = "rbxassetid://98513750065199"
local idleAnimationId = "rbxassetid://96351859981140"
local shootAnimationId = "rbxassetid://105038999697769"
local charShootAnimationId = "rbxassetid://15100979172"
local charIdleAnimationId = "rbxassetid://15100959769"
local charReloadAnimationId = "rbxassetid://3972131105"
local shootSFXId = "rbxassetid://6518454220"
local reloadAnimationId = "rbxassetid://124837635292059"
local reloadSFXId = "rbxassetid://3603370582"

local shooting = false
local reloading = false
local aiming = false
local holdingMouseButton1 = false

local checkAmmoRemote = ReplicatedStorage.Events:WaitForChild("CheckAmmoRemote")
local ammoCount = 30
local maxAmmo = 30
local ammoDisplay

local function updateAmmoDisplay()
	if ammoDisplay then
		ammoDisplay.Text = "Ammo: " .. ammoCount .. "/" .. maxAmmo
	end
end

local function playAnimation(animator, animId)
	if animator then
		local animation = Instance.new("Animation")
		animation.AnimationId = animId
		local success, animTrack = pcall(function()
			return animator:LoadAnimation(animation)
		end)
		if success and animTrack then
			return animTrack
		end
	end
	return nil
end

tool.Equipped:Connect(function()
	equipped = true
	script.Parent.Handle.Mesh.MeshId = 0
	script.Parent.Handle.Mesh.TextureId = 0
	ViewModel = ReplicatedStorage.VMs["MP7 SMG"]:Clone()
	ViewModel.Parent = Camera
	ViewModel.PrimaryPart = ViewModel:FindFirstChild("Handle")
	local animationController = ViewModel:FindFirstChild("AnimationController")
	if animationController then
		animator = animationController:FindFirstChild("Animator")
		equipAnim = playAnimation(animator, equipAnimationId)
		if equipAnim then
			equipAnim:Play()
			equipAnim:AdjustSpeed(1.25)
			equipAnim.Stopped:Connect(function()
				task.wait(0.01)
				idleAnim = playAnimation(animator, idleAnimationId)
				if idleAnim then
					idleAnim.Looped = true
					idleAnim:Play()
					idleAnim:AdjustSpeed(1)
				end
			end)
		end
	end
	charIdleAnim = playAnimation(character:FindFirstChildOfClass("Humanoid"), charIdleAnimationId)
	if charIdleAnim then
		charIdleAnim.Looped = true
		charIdleAnim:Play()
	end
	ammoCount = maxAmmo
	updateAmmoDisplay()
end)

tool.Unequipped:Connect(function()
	equipped = false
	if equipAnim then equipAnim:Stop() end
	if idleAnim then idleAnim:Stop() end
	if reloadAnim then reloadAnim:Stop() end
	if charIdleAnim then charIdleAnim:Stop() end
	if charShootAnim then charShootAnim:Stop() end
	if ViewModel then ViewModel:Destroy() end
end)

local mouse = player:GetMouse()

local function playShootAnimation()
	if not shooting and not reloading then
		local ammoLeft = checkAmmoRemote:InvokeServer()
		if ammoLeft > 0 then
			shooting = true
			shootAnim = playAnimation(animator, shootAnimationId)
			if shootAnim then
				shootAnim:Play()
				shootAnim:AdjustSpeed(2)
				shootAnim.Stopped:Connect(function()
					shooting = false
				end)
			end
			charShootAnim = playAnimation(character:FindFirstChildOfClass("Humanoid"), charShootAnimationId)
			if charShootAnim then charShootAnim:Play() end
			local shootSFX = Instance.new("Sound")
			shootSFX.SoundId = shootSFXId
			shootSFX.Parent = ViewModel.PrimaryPart
			shootSFX:Play()
			shootSFX.Stopped:Connect(function() shootSFX:Destroy() end)
			wait(0.01)
			shootRemote:FireServer(mouse.Hit)
			ammoCount = ammoCount - 1
			updateAmmoDisplay()
		else
			print("Out of ammo, reload required!")
		end
	end
end

local function reload()
	if not reloading then
		reloading = true
		reloadAnim = playAnimation(animator, reloadAnimationId)
		if reloadAnim then
			reloadAnim:Play()
			reloadAnim:AdjustSpeed(0.8)
			reloadAnim.Stopped:Connect(function()
				reloadRemote:FireServer()
				ammoCount = maxAmmo
				updateAmmoDisplay()
				reloading = false
			end)
		else
			reloading = false
		end
		charReloadAnim = playAnimation(character:FindFirstChildOfClass("Humanoid"), charReloadAnimationId)
		if charReloadAnim then charReloadAnim:Play() end
		local reloadSFX = Instance.new("Sound")
		reloadSFX.SoundId = reloadSFXId
		reloadSFX.Parent = ViewModel.PrimaryPart
		reloadSFX:Play()
		reloadSFX.Stopped:Connect(function() reloadSFX:Destroy() end)
	end
end

uis.InputBegan:Connect(function(input, isProcessed)
	if equipped and not isProcessed then
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			holdingMouseButton1 = true
			while holdingMouseButton1 do
				playShootAnimation()
				wait(0.1)
			end
		elseif input.KeyCode == Enum.KeyCode.R then
			reload()
		elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
			aiming = true
			local aimTween = TweenService:Create(Camera, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), { FieldOfView = 50 })
			aimTween:Play()
		end
	end
end)

uis.InputEnded:Connect(function(input)
	if equipped then
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			holdingMouseButton1 = false
		elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
			aiming = false
			local aimTween = TweenService:Create(Camera, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), { FieldOfView = 70 })
			aimTween:Play()
		end
	end
end)

RunService.RenderStepped:Connect(function()
	if equipped and ViewModel then
		if ViewModel.PrimaryPart then
			ViewModel:SetPrimaryPartCFrame(Camera.CFrame)
		end
		for _, v in pairs(ViewModel:GetChildren()) do
			if v:IsA("BasePart") then
				v.CanCollide = false
			end
		end
	end
end)

local function createHitmarker()
	local hitmarker = Instance.new("ScreenGui", player.PlayerGui)
	local frame = Instance.new("Frame", hitmarker)
	frame.Size = UDim2.new(0, 100, 0, 100)
	frame.Position = UDim2.new(0.5, -50, 0.5, -50)
	frame.BackgroundColor3 = Color3.new(1, 0, 0)
	frame.BackgroundTransparency = 0.5
	hitmarker.Enabled = false
	return hitmarker
end

local function onHit()
	local hitmarker = createHitmarker()
	hitmarker.Enabled = true
	wait(0.1)
	hitmarker.Enabled = false
end

shootRemote.OnClientEvent:Connect(onHit)

RunService.Heartbeat:Connect(function()
	if equipped and aiming and ViewModel then
		for _, v in pairs(ViewModel:GetChildren()) do
			if v:IsA("BasePart") and v.Name ~= "Handle" then
				v.Transparency = 0.5
			end
		end
	end
end)

local function initAmmoDisplay()
	ammoDisplay = Instance.new("TextLabel", player.PlayerGui)
	ammoDisplay.Size = UDim2.new(0, 200, 0, 50)
	ammoDisplay.Position = UDim2.new(0.5, -100, 0.9, 0)
	ammoDisplay.BackgroundTransparency = 1
	ammoDisplay.TextColor3 = Color3.new(1, 1, 1)
	ammoDisplay.TextScaled = true
	updateAmmoDisplay()
end

initAmmoDisplay() 
