local tool = script.Parent
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local uis = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local shootRemote = ReplicatedStorage.Events:WaitForChild("ShootRemote")
local reloadRemote = ReplicatedStorage.Events:WaitForChild("ReloadRemote")
local checkAmmoRemote = ReplicatedStorage.Events:WaitForChild("CheckAmmoRemote")

local equipped = false
local ViewModel, animator
local ammoCount, maxAmmo = 30, 30
local shooting, reloading, aiming, holdingMouseButton1 = false, false, false, false

local animationIds = {
	equip = "rbxassetid://98513750065199",
	idle = "rbxassetid://96351859981140",
	shoot = "rbxassetid://105038999697769",
	reload = "rbxassetid://124837635292059",
	charShoot = "rbxassetid://15100979172",
	charIdle = "rbxassetid://15100959769",
	charReload = "rbxassetid://3972131105"
}

local sfxIds = {
	shoot = "rbxassetid://6518454220",
	reload = "rbxassetid://3603370582"
}

local particleProperties = {
	Texture = "rbxassetid://10564554699",
	Color = ColorSequence.new(Color3.new(1, 1, 0.8)),
	Lifetime = NumberRange.new(0.1, 0.2),
	Rate = 100,
	Speed = NumberRange.new(10, 20),
	Rotation = NumberRange.new(-180, 180),
	RotSpeed = NumberRange.new(100, 200),
	Size = NumberSequence.new(0.3, 0.6),
	Transparency = NumberSequence.new({ NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 1) }),
}

local function playAnimation(animator, animId)
	local animation = Instance.new("Animation")
	animation.AnimationId = animId
	local success, animTrack = pcall(function()
		return animator:LoadAnimation(animation)
	end)
	if success and animTrack then
		return animTrack
	end
end

local function updateAmmoDisplay()
	if player.PlayerGui:FindFirstChild("AmmoDisplay") then
		player.PlayerGui.AmmoDisplay.Text = "Ammo: " .. ammoCount .. "/" .. maxAmmo
	end
end

local function createParticleEmitter(parent)
	local particleEmitter = Instance.new("ParticleEmitter")
	for property, value in pairs(particleProperties) do
		particleEmitter[property] = value
	end
	particleEmitter.Parent = parent
	return particleEmitter
end

local function initAmmoDisplay()
	local ammoDisplay = Instance.new("TextLabel", player.PlayerGui)
	ammoDisplay.Name = "AmmoDisplay"
	ammoDisplay.Size = UDim2.new(0, 200, 0, 50)
	ammoDisplay.Position = UDim2.new(0.5, -100, 0.9, 0)
	ammoDisplay.BackgroundTransparency = 1
	ammoDisplay.TextColor3 = Color3.new(1, 1, 1)
	ammoDisplay.TextScaled = true
	updateAmmoDisplay()
end

local function playShootAnimation()
	if not shooting and not reloading and ammoCount > 0 then
		shooting = true
		local muzzleFlash = createParticleEmitter(ViewModel.PrimaryPart)
		muzzleFlash:Emit(10)

		local shootAnim = playAnimation(animator, animationIds.shoot)
		if shootAnim then
			shootAnim:Play()
			shootAnim:AdjustSpeed(2)
			shootAnim.Stopped:Connect(function() shooting = false end)
		end

		local charShootAnim = playAnimation(character:FindFirstChildOfClass("Humanoid"), animationIds.charShoot)
		if charShootAnim then charShootAnim:Play() end

		local shootSFX = Instance.new("Sound", ViewModel.PrimaryPart)
		shootSFX.SoundId = sfxIds.shoot
		shootSFX:Play()
		shootSFX.Stopped:Connect(function() shootSFX:Destroy() end)

		wait(0.01)
		shootRemote:FireServer(player:GetMouse().Hit)
		ammoCount -= 1
		updateAmmoDisplay()
	end
end

local function reload()
	if not reloading then
		reloading = true
		local reloadAnim = playAnimation(animator, animationIds.reload)
		if reloadAnim then
			reloadAnim:Play()
			reloadAnim:AdjustSpeed(0.8)
			reloadAnim.Stopped:Connect(function()
				reloadRemote:FireServer()
				ammoCount = maxAmmo
				updateAmmoDisplay()
				reloading = false
			end)
		else
			reloading = false
		end

		local charReloadAnim = playAnimation(character:FindFirstChildOfClass("Humanoid"), animationIds.charReload)
		if charReloadAnim then charReloadAnim:Play() end

		local reloadSFX = Instance.new("Sound", ViewModel.PrimaryPart)
		reloadSFX.SoundId = sfxIds.reload
		reloadSFX:Play()
		reloadSFX.Stopped:Connect(function() reloadSFX:Destroy() end)
	end
end

tool.Equipped:Connect(function()
	equipped = true
	ViewModel = ReplicatedStorage.VMs["MP7 SMG"]:Clone()
	ViewModel.Parent = Camera
	ViewModel.PrimaryPart = ViewModel:FindFirstChild("Handle")

	local animationController = ViewModel:FindFirstChild("AnimationController")
	if animationController then
		animator = animationController:FindFirstChild("Animator")
		local equipAnim = playAnimation(animator, animationIds.equip)
		if equipAnim then
			equipAnim:Play()
			equipAnim:AdjustSpeed(1.25)
			equipAnim.Stopped:Connect(function()
				local idleAnim = playAnimation(animator, animationIds.idle)
				if idleAnim then
					idleAnim.Looped = true
					idleAnim:Play()
				end
			end)
		end
	end

	local charIdleAnim = playAnimation(character:FindFirstChildOfClass("Humanoid"), animationIds.charIdle)
	if charIdleAnim then
		charIdleAnim.Looped = true
		charIdleAnim:Play()
	end
	ammoCount = maxAmmo
	updateAmmoDisplay()
end)

tool.Unequipped:Connect(function()
	equipped = false
	if ViewModel then ViewModel:Destroy() end
end)

uis.InputBegan:Connect(function(input, isProcessed)
	if equipped and not isProcessed then
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			holdingMouseButton1 = true
			while holdingMouseButton1 do
				playShootAnimation()
				wait(0.1)
			end
		elseif input.KeyCode == Enum.KeyCode.R then
			reload()
		elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
			aiming = true
			local aimTween = TweenService:Create(Camera, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), { FieldOfView = 50 })
			aimTween:Play()
		end
	end
end)

uis.InputEnded:Connect(function(input)
	if equipped then
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			holdingMouseButton1 = false
		elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
			aiming = false
			local aimTween = TweenService:Create(Camera, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), { FieldOfView = 70 })
			aimTween:Play()
		end
	end
end)

RunService.RenderStepped:Connect(function()
	if equipped and ViewModel and ViewModel.PrimaryPart then
		ViewModel:SetPrimaryPartCFrame(Camera.CFrame)
		for _, v in pairs(ViewModel:GetChildren()) do
			if v:IsA("BasePart") then
				v.CanCollide = false
			end
		end
	end
end)

initAmmoDisplay()
